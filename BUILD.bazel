# Copyright 2018 Google Inc.  All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cc_binary(
    name = "rectangle_histogram",
    srcs = ["rectangle_histogram.cc"],
)

cc_binary(
    name = "maximal_rectangle",
    srcs = ["maximal_rectangle.cc"],
)

cc_binary(
    name = "climbing_stairs",
    srcs = ["climbing_stairs.cc"],
)

cc_binary(
    name = "first_bad_version",
    srcs = ["first_bad_version.cc"],
)

cc_binary(
    name = "valid_parentheses",
    srcs = ["valid_parentheses.cc"],
)

cc_binary(
    name = "longest_valid_parentheses",
    srcs = ["longest_valid_parentheses.cc"],
)

cc_binary(
    name = "valid_palindrome",
    srcs = ["valid_palindrome.cc"],
)

cc_binary(
    name = "longest_palindromic_substring",
    srcs = ["longest_palindromic_substring.cc"],
)

cc_binary(
    name = "maximal_square",
    srcs = ["maximal_square.cc"],
)

cc_binary(
    name = "clone_graph",
    srcs = ["clone_graph.cc"],
)

cc_binary(
    name = "subarray_sum",
    srcs = ["subarray_sum.cc"],
)

cc_binary(
    name = "min_path_sum",
    srcs = ["min_path_sum.cc"],
)

cc_binary(
    name = "valid_palindrome_ii",
    srcs = ["valid_palindrome_ii.cc"],
)

cc_binary(
    name = "triangle",
    srcs = ["triangle.cc"],
)

cc_binary(
    name = "decode_ways",
    srcs = ["decode_ways.cc"],
)

cc_binary(
    name = "coin_change",
    srcs = ["coin_change.cc"],
)

cc_binary(
    name = "counting_bits",
    srcs = ["counting_bits.cc"],
)

cc_binary(
    name = "perfect_squares",
    srcs = ["perfect_squares.cc"],
)

cc_binary(
    name = "integer_break",
    srcs = ["integer_break.cc"],
)

cc_binary(
    name = "basic_calculator_ii",
    srcs = ["basic_calculator_ii.cc"],
)

cc_binary(
    name = "basic_calculator",
    srcs = ["basic_calculator.cc"],
)

cc_binary(
    name = "kth_smallest_element_in_a_bst",
    srcs = ["kth_smallest_element_in_a_bst.cc"],
)

cc_binary(
    name = "vertical_order_traversal_of_a_binary_tree",
    srcs = ["vertical_order_traversal_of_a_binary_tree.cc"],
)

cc_binary(
    name = "unique_paths",
    srcs = ["unique_paths.cc"],
)